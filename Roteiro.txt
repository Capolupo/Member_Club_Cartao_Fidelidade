1 - FIGMA DO PROJETO
https://www.figma.com/design/ZNOw0NyXERvRaxQU5KXWmf/Cart%C3%A3o-fidelidade-(Community)-(Copy)?node-id=3-377&node-type=canvas&t=cCKaBBz4fMloscU0-0

--------------------------------------------------
2 - Criando o Index.html
2.1 - Puxando as fontes do google (https://fonts.google.com/specimen/Oxygen)

--------------------------------------------------
3 - Criar a pasta src>styles (Criar variaveis iniciais FIGMA)
3.1 - Criar o arquivo styles>global.css com as caracteristicas do figma

--------------------------------------------------
4 - Criar a pasta src>assets (Logos, icones e img do FIGMA)
4.1 - Criar a pasta assets>icons do FIGMA

--------------------------------------------------
5 - Criar o arquivo src>main.js para definir os imports e declarar o "use strict" do javascript. Este será o arquivo de entrada do js main.js
5.1 - ja declarar o import import "./styles/global.css";

--------------------------------------------------
6 - Criar o header da pagina no index.html
6.1 - Criar o arquivo src>styles>header.css
6.2 - Importar no arquivo src>main.js import "./styles/header.css";
6.3 - Criar o arquivo src>styles>content.css
6.4 - Importar no arquivo src>main.js import "./styles/content.css";
--------------------------------------------------
7 - Instalando o JSON Server
npm i json-server@1.0.0-alpha.21
7.1 - Sera criado automaticamente o arquivo package.json
7.2 - Adicionar meus dados de author
  "name": "hairday",
  "description": "Aplicação Web de agendamento para corte de cabelo",
  "author": "André Capolupo",
  "scripts":{
  "server" : "json-server --watch server.json --port 3333"
},
7.3 - Criar o arquivo db.json que será onde ficara salva os clientes e os dados da fidelidade
7.4 - deixar criado a rota no server.json
{
  "clients" : []
}

--------------------------------------------------
8 - Criar o arquivo .gitignore para ignorar a pasta node modules

-------------------------------------------------- 
9 - Instalar o webPack
9.1 - Instalando o Webpack e criar os arquivos de configurações:
npm i webpack@5.89.0 webpack-cli@5.1.4 --save-dev
9.2 - Acrecentar no package.json "build":"webpack"
9.3 - Dentro da pasta src Criar o arquivo de entrada do js main.js
9.4 - Na raiz do projeto criar o arq webpack.config.js
*Pegar o modelo deste arquivo ja pronto
9.5 - npm i webpack-dev-server@4.15.1 --save-dev
9.6 - Carregando o HTML no webpack
npm i html-webpack-plugin@5.6.0 --save-dev
9.7 - Instalando o style-loader
npm i style-loader@3.3.3 css-loader@6.8.1 --save-dev
9.8 -  - Copiando os assets
npm i copy-webpack-plugin@11.0.0 --save-dev
9.9 - Instalação do Babel
npm i babel-loader@9.1.3 @babel/core@7.23.7 @babel/preset-env@7.23.7 --save-dev

-------------------------------------------------- 
10 - Instalar a biblioteca dayjs
npm i dayjs@1.11.10
10.1 - Criar  a pasta src\libs para adicionar as bibliotecas instaladas
10.2 - criar o arquivo dayjs com as seguintes configurações:
  import dayjs from "dayjs";
  import "dayjs/locale/pt-br";
  dayjs.locale("pt-br");
10.3 - Atualizar o main.js com o import "./libs/dayjs.js";
---------------------------------------------------
11 - Criar a pasta src/services
11.1 - criar o arquivo api-config.js
11.2 - criar o arquivo fetch-client-information.js
*Arquivo responsavel por buscar as informações do cliente

---------------------------------------------------
12 - Criando a formatação do Input
12.1 - Criar a pasta src>modules>form>input.js
12.3 - Atualizar o main.js com o import do input.js

---------------------------------------------------
13 - Criando a consulta das informações do cliente
13.1 - 12.1 - Criar a pasta src>modules>form>submit.js
12.3 - Atualizar o main.js com o import do submit.js
12.4 - Criar o arquivo que busca as informações do cliente fetch-client-information.js